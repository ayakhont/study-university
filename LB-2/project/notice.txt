About VM:
==================================================================
Open session:
sudo openvpn --config LSB_YakhontovAlexander_lsb-gw.ovpn
ssh -i um89_id_rsa um89@m89.lsb.biocomp.unibo.it

enter into environment:
source /opt/conda/bin/activate

scp:
scp -i keys/um89_id_rsa notice.txt um89@m89.lsb.biocomp.unibo.it:/home/um89

at ____ now >> log.txt
nohup ____ &

Step 1: graphs
==================================================================
DsspStatistics.py run to get graphs

Step 2: obtaining blind set
==================================================================
1) Search Parameter:
Entries of :DepositDateQuery: pdbx_database_status.recvd_initial_deposition_date.comparator
    =between pdbx_database_status.recvd_initial_deposition_date.min=2015-01-01
    and Resolution is between 0.0 and 2.5
    and Percent Sequence Alignment Search : PDB can contain Expression Tag sequence = Yes ,
    and Sequence Length is between 50 and 300
    and Chain Type: there is a Protein chain but not any DNA or RNA or Hybrid
    and Experimental Method is X-RAY

As result 11852 entities

2) combine all fasta files in training set in one:
cat *.fasta >> training_data.fasta

3) To filter out PDB prooblems to run FilterOut.py -> rewriting blind_data.txt

4) To remove inward redundancy:
 - cluster al sequences with 30% identity:
    /home/urfin/programs/blast/blast-2.2.26/bin/blastclust -S 30 -i blind_data.txt -o clustered.txt -a 4 -L 0.0

 - take only first sequences Id from clustered file

 - to create new filtered_blind_test fasta file 5136/2 sequences

4) To remove outward redundancy:
 - blastp -query filtered_blind_data.txt -db training_data.fasta -evalue 0.01 -outfmt 6 -out hits.blast.tab

 - we sort tab output file by similarity and chose 150 sequences with the lowest similarity level
  (to filter out all data from blind test set with high similarity with training set).
  filter_out_considering_training_set() -> final_blind_data

5) To create dssp for each sequence in blind test set
 - download each of these sequence to appropriate pdb file

 - to run for each pdb file mkdssp to create dssp files
 (DsspCreator.py)

Step 3: training
==================================================================
1) Profiling for GOR method
 -

Step 4: prediction
==================================================================

Step 5: profiling
==================================================================
1) Before running PSI-BLAST we must build an index of the sequence DB
makeblastdb â€“in uniprot_sprot.fasta -dbtype prot

2)run PSI-BLAST
psiblast -query ../fasta/d1a1xa_.fasta -db uniprot_sprot.fasta -evalue 0.01 -num_iterations 3 -out_ascii_pssm pssm/d1a1xa_.pssm -num_descriptions 10000 -num_alignments 10000 -out alns/d1a1xa_.alns.blast

Step 6: SVM
==================================================================









